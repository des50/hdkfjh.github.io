WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.594
Finally, there emerged also this is an extremely cloud native option,

00:00:05.594 --> 00:00:08.910
and that needs a little bit of knowledge of

00:00:08.910 --> 00:00:15.089
a new abstraction or a new service in Amazon and namely Amazon Lambda.

00:00:15.089 --> 00:00:19.675
The idea of lambda is it's like a function as a service.

00:00:19.675 --> 00:00:24.480
So basically, when you go and get an EC2 machine, you get the machine,

00:00:24.480 --> 00:00:27.600
and for the time it's up,

00:00:27.600 --> 00:00:30.295
whatever it's doing, you're paying for the time it's up.

00:00:30.295 --> 00:00:31.880
For the Amazon Lambda,

00:00:31.879 --> 00:00:33.890
you don't even have the abstraction of a machine.

00:00:33.890 --> 00:00:36.935
You put a piece of code and you run it.

00:00:36.935 --> 00:00:39.560
You're not even aware that a machine was created.

00:00:39.560 --> 00:00:42.695
You don't even know the IP of the machine on which you train.

00:00:42.695 --> 00:00:44.329
In fact, if you run it twice,

00:00:44.329 --> 00:00:46.890
it might turn out to different machines.

00:00:47.590 --> 00:00:50.675
This is completely self-managed.

00:00:50.674 --> 00:00:57.169
There is a service called Amazon Athena relatively new compared to EMR ,

00:00:57.170 --> 00:00:59.554
and what Athena does is basically,

00:00:59.554 --> 00:01:03.619
it loads the data and runs the computations on Amazon Lambda.

00:01:03.619 --> 00:01:07.670
It decides how many of these needs to have and so on.

00:01:07.670 --> 00:01:10.829
This is totally transparent management.

00:01:11.469 --> 00:01:15.140
Again, that you can actually act either

00:01:15.140 --> 00:01:19.070
interactively where each time it's going to do that computation,

00:01:19.069 --> 00:01:22.309
or you can decide to save the data.

00:01:22.310 --> 00:01:26.480
It also gives you an interface if you want to interactively,

00:01:26.480 --> 00:01:28.760
if you so wish, you can do that or if you

00:01:28.760 --> 00:01:31.390
can load the data from S3, that's also possible.

00:01:31.390 --> 00:01:34.829
Now, for this option in general, supposedly the Lambda,

00:01:34.829 --> 00:01:37.064
if you do not do things a lot,

00:01:37.064 --> 00:01:39.780
if your computations pan,

00:01:39.780 --> 00:01:42.269
I don't know, 10 percent of the day.

00:01:42.269 --> 00:01:46.569
If they last one hour out of the 24 hours,

00:01:46.909 --> 00:01:51.119
definitely Lambda is going to be better than EC2,

00:01:51.120 --> 00:01:57.140
and definitely EC2 is going to be better than having EMR all the time on.

00:01:57.140 --> 00:02:02.960
So, these are three different architectures that you are free to reason

00:02:02.959 --> 00:02:08.734
about and to see where your business for the solution that you are working on,

00:02:08.735 --> 00:02:12.780
what suits best the case at hand.

